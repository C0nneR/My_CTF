MAZE_WIDTH = 60
MAZE_HEIGHT = 60
DOTS_DATA = [65407, 60999, 31620, 5074, 27425, 53858, 20942, 3721]
MAZE_DATA = [11, 10, 12, 9, 10, 10, 8, 8, 10, 14, 9, 8, 10, 10, 12, 11, 8, 10, 12, 9, 10, 12, 9, 10, 10, 10, 12, 11, 10, 10, 10, 8, 12, 9, 8, 14, 9, 10, 12, 9, 8, 12, 11, 10, 10, 10, 8, 12, 11, 8, 10, 10, 8, 14, 9, 12, 9, 8, 12, 13, 13, 9, 6, 5, 9, 12, 5, 7, 9, 12, 5, 5, 9, 12, 3, 10, 6, 9, 6, 5, 9, 6, 3, 12, 9, 14, 3, 10, 10, 10, 12, 7, 1, 6, 3, 12, 3, 12, 5, 5, 5, 3, 10, 10, 10, 10, 6, 3, 12, 5, 9, 12, 7, 9, 6, 5, 5, 5, 3, 4, 5, 5, 11, 2, 6, 5, 3, 10, 6, 5, 5, 3, 6, 3, 10, 10, 12, 5, 9, 6, 3, 12, 9, 6, 1, 10, 10, 10, 8, 14, 3, 12, 3, 12, 13, 5, 9, 6, 3, 6, 5, 9, 10, 10, 10, 10, 12, 9, 6, 5, 5, 3, 10, 2, 12, 3, 6, 5, 9, 6, 5, 3, 12, 11, 12, 1, 14, 9, 12, 3, 6, 9, 12, 9, 10, 12, 5, 3, 6, 13, 9, 6, 5, 11, 2, 10, 12, 13, 3, 10, 10, 6, 11, 2, 6, 5, 3, 10, 12, 9, 6, 5, 11, 12, 9, 10, 6, 5, 11, 0, 2, 14, 9, 12, 3, 10, 14, 5, 5, 13, 1, 12, 3, 12, 3, 6, 9, 6, 3, 10, 12, 5, 3, 6, 13, 3, 6, 9, 10, 6, 5, 11, 2, 10, 12, 13, 3, 2, 10, 10, 12, 9, 10, 10, 12, 3, 8, 10, 6, 3, 12, 3, 8, 6, 3, 10, 12, 3, 12, 5, 9, 10, 6, 3, 10, 10, 10, 6, 5, 5, 5, 3, 12, 3, 10, 12, 3, 12, 9, 10, 6, 1, 12, 11, 2, 8, 12, 1, 10, 12, 3, 12, 9, 10, 6, 5, 9, 8, 8, 14, 5, 1, 10, 12, 3, 12, 3, 10, 12, 13, 5, 9, 6, 9, 10, 12, 1, 12, 5, 7, 5, 9, 14, 9, 8, 14, 9, 10, 6, 5, 1, 12, 3, 10, 12, 5, 9, 6, 3, 12, 11, 6, 5, 9, 12, 7, 1, 6, 9, 6, 9, 6, 5, 9, 14, 1, 6, 5, 5, 9, 6, 3, 12, 3, 12, 5, 11, 10, 2, 4, 5, 3, 12, 5, 11, 2, 6, 7, 5, 9, 6, 1, 10, 6, 5, 9, 2, 10, 10, 6, 5, 5, 9, 12, 7, 5, 3, 10, 12, 3, 10, 10, 6, 5, 3, 12, 5, 13, 5, 9, 6, 9, 6, 3, 8, 6, 9, 6, 7, 3, 10, 12, 3, 12, 5, 3, 12, 9, 12, 5, 3, 12, 5, 3, 10, 10, 10, 10, 6, 3, 12, 5, 9, 12, 3, 6, 9, 10, 10, 12, 5, 5, 5, 3, 10, 6, 9, 10, 6, 9, 10, 10, 10, 6, 9, 6, 5, 5, 5, 3, 12, 3, 10, 12, 3, 12, 3, 10, 12, 9, 10, 6, 9, 6, 5, 9, 2, 6, 5, 3, 12, 5, 5, 9, 10, 12, 9, 10, 10, 8, 6, 3, 6, 5, 9, 10, 6, 9, 12, 5, 5, 5, 5, 9, 10, 12, 5, 9, 10, 4, 9, 10, 12, 13, 3, 12, 3, 6, 1, 12, 3, 10, 10, 6, 13, 5, 11, 12, 5, 3, 10, 12, 7, 9, 4, 7, 9, 12, 3, 12, 7, 5, 5, 3, 14, 1, 6, 9, 10, 6, 9, 12, 13, 5, 3, 12, 11, 6, 5, 5, 5, 5, 3, 6, 13, 3, 6, 5, 13, 3, 6, 13, 5, 3, 10, 2, 10, 10, 6, 3, 10, 10, 12, 11, 4, 5, 9, 4, 1, 10, 14, 3, 12, 5, 7, 9, 6, 5, 13, 3, 10, 6, 3, 10, 12, 3, 14, 3, 10, 12, 5, 5, 3, 4, 9, 2, 10, 8, 6, 5, 7, 5, 9, 10, 2, 10, 12, 3, 4, 11, 8, 4, 3, 10, 10, 140, 11, 10, 10, 12, 9, 12, 1, 10, 6, 5, 5, 5, 3, 10, 12, 9, 6, 3, 10, 2, 14, 5, 1, 10, 10, 8, 10, 14, 3, 10, 10, 10, 12, 3, 4, 3, 12, 5, 5, 9, 12, 7, 9, 4, 9, 6, 5, 13, 9, 10, 4, 13, 5, 9, 6, 5, 11, 10, 12, 3, 10, 10, 12, 3, 4, 5, 5, 9, 10, 6, 5, 5, 9, 10, 4, 3, 12, 9, 10, 12, 9, 6, 5, 13, 9, 4, 9, 10, 10, 10, 8, 12, 3, 12, 3, 14, 5, 5, 5, 5, 3, 10, 6, 5, 5, 9, 6, 5, 3, 12, 3, 6, 3, 6, 13, 3, 10, 12, 1, 8, 10, 12, 3, 12, 7, 3, 6, 5, 11, 8, 6, 5, 5, 11, 4, 13, 3, 6, 13, 3, 6, 13, 3, 4, 5, 5, 3, 8, 10, 14, 5, 3, 14, 5, 9, 10, 6, 7, 5, 5, 11, 12, 9, 6, 1, 6, 11, 0, 12, 3, 10, 8, 12, 13, 1, 10, 12, 5, 5, 5, 11, 6, 9, 6, 9, 10, 10, 6, 9, 6, 13, 5, 3, 12, 3, 2, 10, 10, 2, 10, 12, 3, 10, 6, 5, 7, 9, 6, 9, 12, 5, 9, 10, 6, 1, 12, 9, 10, 6, 3, 12, 3, 4, 13, 3, 10, 12, 5, 3, 14, 9, 6, 3, 4, 5, 13, 3, 6, 5, 5, 9, 8, 6, 9, 6, 9, 10, 10, 6, 9, 6, 5, 9, 6, 9, 10, 10, 8, 10, 14, 3, 10, 10, 10, 4, 9, 6, 13, 5, 1, 6, 5, 9, 10, 6, 5, 5, 11, 8, 12, 3, 12, 3, 6, 13, 9, 6, 3, 10, 12, 5, 9, 14, 5, 5, 3, 10, 10, 6, 5, 5, 7, 9, 6, 9, 4, 9, 14, 9, 2, 10, 6, 5, 11, 2, 12, 11, 6, 9, 10, 10, 10, 10, 10, 6, 3, 12, 5, 5, 5, 9, 6, 3, 12, 9, 6, 5, 9, 6, 3, 12, 5, 9, 12, 5, 5, 11, 8, 12, 5, 5, 1, 10, 6, 3, 10, 10, 10, 12, 5, 3, 10, 6, 13, 5, 5, 3, 12, 5, 9, 10, 12, 3, 10, 12, 5, 9, 12, 5, 11, 10, 8, 12, 11, 8, 14, 5, 5, 5, 7, 5, 9, 10, 6, 3, 10, 2, 6, 9, 14, 5, 3, 6, 5, 1, 2, 10, 6, 5, 5, 5, 3, 10, 12, 9, 14, 9, 10, 6, 1, 10, 12, 9, 2, 6, 5, 9, 6, 3, 6, 9, 6, 13, 9, 6, 5, 5, 3, 2, 10, 8, 6, 3, 10, 4, 9, 6, 5, 3, 12, 5, 3, 12, 9, 10, 12, 9, 12, 3, 12, 5, 9, 14, 5, 5, 13, 9, 12, 5, 5, 5, 9, 12, 5, 3, 12, 3, 10, 10, 6, 13, 5, 3, 12, 9, 6, 3, 10, 10, 12, 5, 9, 6, 5, 9, 2, 6, 9, 10, 12, 7, 9, 12, 9, 6, 3, 10, 2, 12, 3, 6, 11, 4, 3, 14, 5, 5, 3, 12, 3, 2, 6, 9, 4, 3, 4, 5, 5, 3, 6, 3, 6, 5, 3, 10, 4, 9, 10, 8, 14, 1, 6, 13, 5, 3, 10, 12, 9, 12, 5, 3, 4, 9, 6, 3, 10, 12, 3, 12, 147, 10, 6, 5, 7, 9, 10, 8, 12, 3, 10, 10, 12, 3, 8, 10, 6, 5, 13, 5, 9, 10, 10, 6, 5, 9, 6, 5, 3, 8, 10, 10, 12, 5, 11, 12, 5, 3, 14, 5, 9, 6, 9, 4, 3, 12, 13, 3, 6, 5, 5, 9, 6, 3, 12, 9, 12, 5, 13, 5, 9, 10, 14, 5, 9, 6, 9, 6, 5, 9, 12, 13, 5, 11, 4, 9, 10, 4, 3, 2, 6, 9, 12, 9, 6, 3, 12, 3, 12, 7, 9, 12, 3, 6, 9, 6, 3, 10, 8, 6, 3, 12, 5, 3, 12, 5, 1, 12, 9, 6, 5, 3, 10, 12, 3, 6, 5, 3, 6, 5, 1, 10, 12, 3, 6, 13, 3, 12, 5, 5, 3, 6, 3, 12, 7, 3, 12, 7, 9, 10, 12, 7, 1, 6, 13, 13, 5, 13, 3, 10, 6, 5, 13, 9, 2, 8, 14, 9, 6, 9, 10, 6, 3, 12, 5, 3, 4, 7, 5, 9, 2, 10, 10, 4, 9, 8, 6, 9, 10, 6, 3, 12, 3, 12, 9, 2, 12, 5, 3, 6, 9, 10, 12, 5, 9, 10, 6, 9, 2, 14, 1, 12, 3, 10, 4, 5, 3, 2, 12, 9, 12, 5, 5, 1, 14, 3, 10, 2, 12, 3, 12, 11, 10, 164, 1, 12, 5, 9, 6, 5, 9, 10, 12, 7, 5, 7, 9, 6, 9, 10, 10, 6, 13, 3, 2, 14, 5, 5, 9, 12, 5, 13, 3, 6, 5, 9, 10, 6, 9, 12, 7, 5, 11, 12, 5, 1, 8, 14, 3, 6, 5, 5, 3, 6, 9, 12, 9, 12, 5, 13, 3, 10, 12, 7, 5, 7, 5, 3, 12, 7, 3, 12, 3, 12, 3, 12, 3, 12, 1, 10, 10, 10, 2, 10, 14, 9, 6, 3, 6, 3, 6, 1, 8, 10, 6, 3, 12, 9, 6, 3, 10, 6, 9, 6, 5, 7, 5, 9, 10, 12, 5, 3, 10, 10, 6, 3, 6, 5, 3, 4, 11, 12, 3, 12, 5, 9, 6, 13, 3, 8, 14, 1, 14, 3, 12, 3, 12, 5, 7, 9, 10, 10, 12, 9, 12, 5, 9, 10, 8, 12, 13, 5, 3, 12, 9, 10, 6, 5, 9, 10, 10, 8, 4, 9, 6, 9, 6, 3, 12, 3, 6, 9, 12, 9, 10, 10, 10, 6, 13, 3, 10, 4, 9, 6, 3, 2, 12, 1, 12, 3, 10, 6, 9, 10, 2, 12, 5, 3, 12, 5, 9, 14, 3, 6, 5, 3, 2, 14, 5, 5, 1, 6, 13, 3, 2, 10, 14, 5, 3, 14, 9, 6, 5, 5, 13, 1, 10, 12, 5, 11, 10, 4, 5, 3, 10, 12, 11, 8, 2, 10, 10, 6, 3, 10, 12, 13, 5, 5, 5, 11, 8, 14, 5, 13, 9, 6, 1, 12, 3, 6, 5, 9, 10, 12, 5, 9, 10, 10, 6, 5, 3, 10, 2, 12, 9, 10, 10, 6, 9, 188, 5, 11, 4, 5, 5, 1, 14, 3, 4, 9, 10, 6, 5, 9, 14, 3, 12, 3, 10, 10, 12, 11, 12, 9, 6, 3, 2, 6, 3, 12, 5, 9, 6, 5, 3, 12, 5, 5, 11, 10, 2, 2, 14, 5, 5, 5, 9, 12, 13, 3, 12, 11, 10, 6, 5, 9, 10, 10, 4, 5, 3, 12, 5, 3, 4, 7, 9, 12, 3, 6, 11, 12, 5, 5, 9, 12, 5, 13, 9, 10, 6, 9, 6, 3, 12, 9, 10, 10, 12, 5, 5, 3, 12, 1, 10, 6, 5, 3, 10, 10, 10, 10, 12, 5, 3, 6, 5, 3, 2, 12, 5, 9, 10, 10, 6, 1, 10, 14, 5, 3, 10, 4, 3, 14, 5, 9, 6, 3, 12, 9, 8, 6, 3, 4, 5, 5, 5, 5, 5, 11, 8, 2, 8, 14, 3, 6, 11, 12, 5, 3, 0, 14, 5, 3, 10, 12, 5, 9, 10, 10, 12, 11, 2, 2, 8, 10, 6, 9, 12, 7, 5, 1, 12, 11, 10, 6, 9, 12, 5, 9, 12, 5, 9, 10, 6, 5, 11, 10, 4, 7, 3, 10, 10, 6, 5, 3, 6, 5, 3, 12, 5, 13, 3, 8, 10, 8, 10, 6, 3, 12, 7, 9, 6, 9, 10, 6, 3, 6, 9, 10, 4, 9, 10, 12, 7, 9, 10, 6, 3, 10, 6, 7, 1, 10, 10, 12, 5, 5, 5, 5, 3, 6, 3, 12, 13, 5, 9, 12, 5, 9, 10, 10, 10, 10, 6, 11, 12, 1, 10, 6, 5, 1, 14, 3, 12, 7, 9, 8, 14, 5, 9, 6, 11, 2, 10, 10, 12, 13, 5, 11, 4, 5, 13, 3, 10, 6, 11, 10, 10, 8, 10, 12, 3, 14, 9, 6, 5, 5, 5, 3, 10, 8, 14, 5, 5, 5, 5, 5, 3, 6, 9, 12, 11, 10, 8, 10, 6, 3, 12, 13, 5, 3, 8, 14, 3, 12, 5, 3, 12, 5, 3, 10, 10, 12, 9, 12, 3, 4, 3, 12, 5, 3, 2, 12, 11, 8, 10, 12, 9, 6, 9, 6, 9, 10, 6, 9, 6, 3, 6, 9, 12, 7, 9, 6, 5, 5, 5, 3, 10, 10, 6, 3, 10, 12, 1, 12, 201, 10, 6, 3, 2, 10, 6, 9, 10, 4, 5, 13, 3, 6, 9, 10, 12, 5, 5, 5, 9, 6, 9, 6, 3, 12, 13, 3, 10, 6, 13, 3, 6, 9, 6, 11, 2, 12, 9, 4, 9, 10, 10, 6, 3, 10, 6, 9, 6, 5, 3, 10, 12, 9, 10, 10, 12, 5, 7, 3, 2, 10, 12, 9, 10, 10, 12, 3, 12, 5, 3, 4, 11, 10, 4, 9, 2, 6, 5, 3, 6, 13, 5, 11, 10, 2, 2, 10, 10, 8, 6, 9, 10, 6, 11, 8, 12, 5, 5, 7, 5, 9, 10, 10, 14, 9, 10, 2, 12, 3, 8, 12, 3, 6, 11, 12, 5, 3, 10, 12, 9, 12, 3, 4, 9, 12, 3, 10, 6, 5, 13, 3, 12, 9, 4, 7, 9, 12, 5, 9, 10, 6, 3, 8, 12, 9, 10, 12, 9, 6, 9, 6, 11, 8, 10, 6, 3, 6, 3, 12, 5, 3, 8, 10, 12, 3, 12, 9, 4, 9, 6, 3, 14, 9, 8, 6, 1, 10, 14, 1, 6, 5, 11, 6, 5, 5, 9, 12, 9, 6, 1, 12, 3, 6, 5, 9, 6, 5, 3, 6, 9, 10, 12, 7, 5, 3, 12, 3, 6, 13, 5, 11, 8, 6, 11, 10, 10, 8, 10, 4, 3, 12, 3, 14, 3, 10, 6, 5, 5, 5, 9, 12, 9, 6, 3, 10, 6, 9, 12, 3, 14, 1, 12, 9, 6, 5, 7, 3, 2, 10, 6, 5, 13, 9, 6, 5, 11, 2, 10, 10, 4, 11, 2, 218, 6, 13, 5, 9, 10, 4, 3, 10, 6, 9, 10, 10, 10, 6, 9, 6, 13, 3, 10, 10, 10, 10, 10, 6, 5, 1, 6, 5, 3, 12, 13, 9, 10, 6, 3, 10, 12, 7, 3, 2, 14, 1, 10, 10, 10, 10, 12, 3, 4, 5, 13, 3, 10, 10, 10, 12, 7, 9, 10, 10, 12, 3, 2, 6, 13, 3, 12, 9, 12, 5, 9, 8, 10, 12, 5, 9, 2, 10, 8, 8, 10, 10, 10, 14, 5, 3, 14, 1, 12, 5, 5, 5, 9, 12, 9, 14, 5, 9, 10, 10, 12, 7, 9, 12, 9, 12, 3, 12, 7, 3, 4, 9, 10, 14, 9, 6, 9, 6, 9, 14, 3, 12, 9, 8, 0, 14, 5, 5, 3, 6, 5, 3, 12, 5, 5, 7, 9, 12, 7, 5, 9, 10, 12, 9, 6, 9, 8, 6, 7, 3, 4, 3, 6, 5, 1, 12, 1, 6, 11, 8, 2, 10, 6, 3, 6, 3, 12, 3, 12, 9, 6, 3, 12, 9, 6, 9, 6, 11, 2, 8, 12, 5, 7, 5, 7, 9, 6, 1, 10, 12, 3, 12, 5, 7, 3, 10, 6, 3, 12, 1, 6, 9, 6, 5, 13, 5, 7, 9, 12, 9, 2, 14, 9, 6, 5, 3, 6, 9, 12, 5, 9, 10, 12, 9, 10, 14, 5, 9, 6, 3, 10, 10, 4, 5, 9, 6, 9, 10, 10, 6, 5, 3, 12, 3, 10, 2, 12, 3, 14, 3, 12, 7, 5, 9, 10, 12, 9, 12, 5, 7, 9, 6, 9, 6, 5, 3, 10, 6, 3, 2, 14, 9, 6, 13, 5, 13, 9, 6, 5, 7, 5, 13, 5, 5, 9, 10, 6, 1, 10, 10, 8, 14, 5, 5, 3, 12, 5, 9, 10, 14, 5, 13, 3, 10, 12, 11, 2, 12, 9, 10, 6, 9, 6, 5, 13, 3, 6, 5, 3, 10, 4, 9, 6, 9, 4, 9, 10, 10, 10, 10, 12, 1, 12, 3, 2, 6, 1, 14, 5, 9, 2, 6, 5, 5, 3, 12, 11, 0, 10, 14, 5, 9, 6, 3, 12, 3, 6, 3, 12, 9, 6, 3, 8, 12, 5, 9, 12, 5, 5, 9, 10, 2, 10, 6, 3, 8, 14, 3, 10, 12, 5, 5, 11, 4, 5, 5, 11, 8, 10, 10, 6, 5, 3, 10, 10, 10, 6, 9, 4, 1, 14, 9, 6, 1, 14, 3, 12, 7, 9, 10, 4, 5, 9, 14, 3, 10, 8, 10, 6, 3, 12, 9, 6, 5, 3, 6, 5, 1, 6, 3, 10, 10, 12, 9, 10, 6, 9, 8, 14, 3, 6, 3, 12, 5, 5, 1, 12, 3, 10, 12, 11, 2, 10, 10, 14, 9, 8, 6, 7, 5, 9, 6, 11, 2, 10, 10, 2, 10, 6, 11, 6, 5, 5, 9, 10, 12, 3, 10, 10, 12, 3, 6, 9, 6, 13, 9, 6, 7, 9, 12, 9, 12, 5, 3, 10, 10, 4, 3, 10, 12, 9, 10, 6, 5, 7, 7, 5, 9, 12, 5, 9, 10, 12, 9, 10, 6, 5, 9, 10, 6, 3, 10, 10, 12, 9, 10, 12, 9, 12, 9, 12, 5, 5, 5, 13, 3, 12, 9, 12, 5, 9, 12, 3, 10, 4, 3, 10, 10, 6, 5, 5, 5, 3, 10, 10, 12, 7, 9, 10, 6, 3, 10, 236, 3, 12, 9, 6, 5, 7, 5, 5, 13, 3, 6, 9, 14, 5, 3, 12, 9, 10, 10, 12, 3, 6, 9, 6, 5, 3, 6, 3, 6, 1, 2, 6, 9, 6, 5, 5, 3, 6, 1, 10, 14, 5, 9, 10, 12, 9, 6, 7, 3, 8, 10, 12, 3, 8, 6, 9, 10, 10, 12, 3, 12, 5, 1, 12, 3, 8, 6, 5, 1, 10, 14, 1, 10, 2, 14, 5, 5, 9, 12, 3, 10, 12, 3, 10, 6, 11, 10, 8, 12, 7, 9, 12, 5, 9, 6, 3, 12, 9, 6, 9, 12, 3, 6, 13, 5, 3, 12, 9, 12, 5, 9, 4, 9, 6, 9, 6, 9, 12, 1, 14, 5, 5, 5, 3, 12, 3, 12, 5, 3, 8, 10, 6, 9, 10, 10, 6, 3, 6, 3, 12, 13, 5, 9, 10, 10, 8, 10, 6, 3, 10, 6, 5, 5, 3, 12, 11, 2, 6, 9, 6, 3, 10, 10, 4, 3, 12, 5, 5, 5, 7, 5, 7, 5, 9, 2, 14, 5, 5, 3, 12, 5, 5, 1, 14, 5, 13, 5, 3, 12, 5, 9, 10, 6, 11, 10, 8, 10, 12, 11, 2, 6, 5, 5, 9, 10, 6, 11, 10, 8, 14, 9, 6, 1, 12, 3, 10, 12, 9, 6, 9, 8, 10, 12, 3, 12, 5, 3, 6, 3, 12, 5, 9, 6, 5, 13, 9, 6, 3, 10, 6, 3, 4, 5, 9, 6, 3, 0, 10, 6, 7, 5, 9, 10, 10, 10, 6, 13, 3, 12, 9, 12, 3, 6, 5, 9, 8, 10, 12, 3, 12, 3, 12, 5, 3, 10, 14, 3, 6, 9, 6, 5, 13, 3, 12, 5, 3, 12, 9, 12, 5, 3, 6, 9, 6, 5, 3, 10, 10, 10, 10, 10, 6, 5, 3, 10, 12, 7, 9, 10, 10, 6, 3, 12, 9, 8, 12, 3, 12, 5, 5, 3, 12, 9, 6, 5, 5, 11, 2, 10, 4, 13, 5, 5, 9, 10, 10, 10, 10, 6, 9, 6, 5, 9, 6, 1, 12, 5, 7, 5, 3, 10, 10, 6, 9, 4, 9, 8, 14, 9, 8, 12, 13, 3, 12, 9, 6, 9, 6, 13, 9, 8, 10, 6, 7, 5, 3, 10, 4, 5, 3, 12, 5, 5, 11, 4, 3, 12, 9, 10, 2, 6, 5, 5, 3, 8, 14, 9, 10, 10, 6, 9, 2, 6, 9, 6, 5, 3, 12, 1, 8, 10, 10, 10, 6, 5, 5, 3, 10, 6, 5, 5, 5, 9, 6, 3, 12, 5, 9, 6, 5, 5, 9, 10, 12, 5, 9, 12, 7, 3, 10, 6, 5, 1, 12, 5, 9, 6, 7, 9, 12, 9, 6, 1, 10, 6, 9, 6, 9, 12, 13, 5, 11, 12, 5, 13, 3, 12, 5, 7, 1, 12, 9, 12, 9, 6, 3, 14, 9, 12, 5, 3, 4, 3, 12, 9, 4, 5, 3, 10, 6, 3, 2, 14, 5, 5, 5, 3, 8, 12, 13, 9, 6, 7, 5, 5, 3, 10, 12, 5, 3, 6, 11, 2, 10, 14, 5, 11, 4, 5, 5, 5, 9, 4, 5, 3, 10, 6, 3, 12, 7, 3, 4, 5, 3, 10, 12, 9, 6, 5, 5, 9, 6, 9, 6, 5, 7, 3, 12, 9, 10, 10, 12, 9, 6, 1, 6, 9, 6, 3, 6, 3, 10, 12, 5, 5, 13, 9, 6, 3, 10, 10, 10, 12, 9, 10, 6, 9, 6, 3, 6, 3, 6, 5, 3, 12, 9, 10, 12, 3, 10, 12, 7, 3, 12, 13, 5, 5, 9, 6, 5, 3, 12, 3, 14, 3, 10, 10, 2, 6, 11, 10, 2, 6, 11, 2, 14, 3, 10, 10, 10, 10, 10, 2, 6, 3, 6, 3, 10, 10, 10, 10, 10, 2, 6, 11, 10, 2, 10, 10, 10, 10, 10, 2, 14, 3, 2, 14, 243, 10, 10, 2, 10, 10, 6, 3, 2, 6, 3, 10, 6, 11, 6]

from itertools import permutations

def prod(arr, n):
	p = 1
	for a in arr:
		p *= a
		p %= n
	return p

MOVES = {
	'WEST': (-1, 'h', 0b0001),
	'EAST': (1, 'l', 0b0100),
	'SOUTH': (MAZE_WIDTH, 'j', 0b0010),
	'NORTH': (-MAZE_WIDTH, 'k', 0b1000)
}

def get_neighbours(maze, pos):
	neighbours = []
	for m in MOVES:
		dpos, move_char, data_mask = MOVES[m]
		new_pos = pos + dpos
		if 0 <= new_pos < len(maze) and (maze[pos] & data_mask == 0):
			neighbours.append((new_pos, move_char))
	return neighbours

def bfs(maze, start, goal):
	visited = {start}
	parents = {}
	Q = [start]

	while len(Q):
		v = Q.pop(0)
		if v == goal:
			return reconstruct_path(parents, goal)
		for neighbour, move in get_neighbours(maze, v):
			if neighbour in visited:
				continue
			visited.add(neighbour)
			parents[neighbour] = (v, move)
			Q.append(neighbour)

def reconstruct_path(parents, goal):
    path = []
    moves = []
    while goal in parents:
        moves.insert(0, parents[goal][1])
        path.insert(0, goal)
        goal = parents[goal][0]
    path.insert(0, goal)
    return path, ''.join(moves)

def get_dot_locations_and_idx(maze):
	dot_locations = []
	for i, p in enumerate(maze):
		if p & 0b10000000:
			x = i % MAZE_WIDTH
			y = i // MAZE_HEIGHT
			dot_idx = (p >> 4) & 0b111
			dot_locations.append((x, y))
	return dot_locations

def get_dot_ordering(dot_data_):
	dot_data = list(enumerate(dot_data_))
	for perm in permutations(dot_data):
		state = 0
		for _, z in perm:
			state &= (z >> 8)
			state ^= (z & 0xff)
		if state == 0xff:
			return [i for i, _ in perm]

dot_locs = get_dot_locations_and_idx(MAZE_DATA)
win_dot_ordering = get_dot_ordering(DOTS_DATA)

print('dot_locations:', dot_locs)
print('dot_ordering:', win_dot_ordering)

checkpoints = [dot_locs[i] for i in win_dot_ordering]
checkpoints = [x + MAZE_WIDTH * y for x, y in checkpoints]
win_moves = ''
cur_pos = 0

for c in checkpoints:
	_, moves = bfs(MAZE_DATA, cur_pos, c)
	cur_pos = c
	win_moves += moves + 'x'

print('win_moves:', win_moves)

key = [win_moves[i : i + 81] for i in range(0, len(win_moves) - 2, 81)]
key = [prod(w.encode(), 0xff) for w in key]
print('key:', list(key))

ct = [184, 64, 13, 26, 252, 53, 44, 60, 181, 51, 222, 15, 102, 86, 225, 60, 179, 244, 161, 3, 99, 198, 139, 217, 105, 244, 215, 157, 161, 163, 216, 244, 48, 247, 150, 164, 240, 237, 200, 234, 153, 108, 162, 113]
flag = bytes([c ^ k for c, k in zip(ct, key)])
print('flag:', flag.decode())